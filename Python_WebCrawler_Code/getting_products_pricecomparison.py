# -*- coding: utf-8 -*-
"""Getting_Products_PriceComparison.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15HFP5xQS0noVEDaxO7dCar8GjtrhO1pA
"""

prodType = []
prodBrand = []
prodName = []
prodOPrice = [] #廠商訂價
prodWPrice = [] #屈臣氏價格

import csv
import re

with open('productsName.csv',newline='',encoding="Big5") as csvfile:
    for line in csvfile.readlines():
        data = line.split(',')
        prodType.append(data[1].strip('\r\n'))
        prodBrand.append(data[2].strip('\r\n'))
        prodName.append(data[3].strip())
        prodOPrice.append(data[4].strip('\r\n'))
prodType.remove('Product')
prodBrand.remove('Brand')
prodName.remove('Name')
prodOPrice.remove('Price')
print('Done with saving data.')

import requests
from bs4 import BeautifulSoup
import time

link = 'https://www.watsons.com.tw/search2?text='
header = {'User-Agent':'Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36'}

for i in range(len(prodName)):
    time.sleep(1)
    query = prodName[i]
    if prodName[i].find('SPF') != -1:
        query =  prodName[i][:prodName[i].find('SPF')]
    url = link + query.replace(' ','+')
    print(url)
    try:
        r = requests.get(url,headers=header)
        objSoup = BeautifulSoup(r.text,'lxml')
        content = objSoup.find_all('div','productItemContainer')
        originLen = len(prodWPrice)
        for j in content:
            cName = j.find_all('h3','h1')
            cPrice = j.find_all('div','h2')
            for k in range(len(cName)):
                if cName[k].text.strip().find(query) != -1:
                    print('-->found: price = ',cPrice[k].text.strip('$'))
                    prodWPrice.append(cPrice[k].text.strip('$'))
                    break
            if len(prodWPrice) > originLen: break
        if len(prodWPrice) == originLen:
            print('--XX Cannot find this product in Watsons XX--')
            prodWPrice.append('None')
    except:
        print('--> Connection error')

print(prodWPrice)